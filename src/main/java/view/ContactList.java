package view;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import com.intellij.uiDesigner.core.Spacer;

import javax.swing.*;
import javax.swing.filechooser.FileNameExtensionFilter;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.NoSuchFileException;
import java.nio.file.Path;
import java.nio.file.Paths;

public class ContactList extends JFrame {
    private JPanel ContactListPanel;
    private JButton addContactButton;
    private JTable contactsTable;
    private JButton exportDataButton;

    public ContactList() {

        setContentPane(ContactListPanel);
        setDefaultCloseOperation(JFrame.HIDE_ON_CLOSE);
        setLocationRelativeTo(null);
        setVisible(true);
        setSize(700, 600);

        //TODO: load data from db

        addContactButton.addActionListener(e -> {
            //open next form (Add Contact)
            openNextForm();
        });
        exportDataButton.addActionListener(e -> {
            //open window dialog so that user will choose where to save the file
            JFileChooser fileChooser = new JFileChooser();
            fileChooser.setFileFilter(new FileNameExtensionFilter("Text File", "txt", "text"));
            int response = fileChooser.showSaveDialog(null);
            //TODO: suggest a file name to user
            if (response == JFileChooser.APPROVE_OPTION) {
                //TODO: if file exists, delete it to replace it
                File file = new File(fileChooser.getSelectedFile().getAbsolutePath());
                try {
                    file.createNewFile();
                } catch (IOException ex) {
                    throw new RuntimeException(ex);
                }
                //File filename = new File(fileChooser.getSelectedFile().getAbsoluteFile().toString());
              /* try{
                   Files.deleteIfExists(Path.of(file));
               }catch (NoSuchFileException e){

               }*/
           /* boolean exists = file.exists();
            if (exists){
                file.delete();
            }else{

            }*/


            }
            //export all data from db to txt file
            try {
                FileWriter fileWriter = new FileWriter(fileChooser.getName());
                //TODO: write all data from db to file
                fileWriter.close();
            } catch (Exception ex) {
                throw new RuntimeException(ex);
            }

        });

    }

    private void openNextForm() {
        new AddContact();
        this.setVisible(false);
        this.dispose();
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        ContactListPanel = new JPanel();
        ContactListPanel.setLayout(new GridLayoutManager(2, 3, new Insets(0, 0, 0, 0), -1, -1));
        addContactButton = new JButton();
        addContactButton.setText("Add Contact");
        ContactListPanel.add(addContactButton, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final Spacer spacer1 = new Spacer();
        ContactListPanel.add(spacer1, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null, 0, false));
        contactsTable = new JTable();
        ContactListPanel.add(contactsTable, new GridConstraints(1, 0, 1, 3, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_WANT_GROW, null, new Dimension(150, 50), null, 0, false));
        exportDataButton = new JButton();
        exportDataButton.setText("Export Data");
        ContactListPanel.add(exportDataButton, new GridConstraints(0, 2, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return ContactListPanel;
    }

}
